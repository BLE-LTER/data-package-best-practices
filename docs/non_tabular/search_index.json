[
["index.html", "Best Practices for Data Packages, Special Handling Non-tablular data, other challenges", " Best Practices for Data Packages, Special Handling Environmental Data Initiative 2019-12-17 Non-tablular data, other challenges Best practice recommendations for non-tablular data, and other packaging challenges requiring special handling. All data are from ecological and environmental sciences. See navigation menu for specific topics. "],
["model-output.html", "1 Model output 1.1 Introduction 1.2 Recommendations for data packages", " 1 Model output 1.1 Introduction Some background info, why this is needed. 1.1.1 Background paragraph, more specific background if needed. 1.2 Recommendations for data packages How to handle this data type "],
["key-value-pair-tables.html", "2 Key-Value Pair Tables 2.1 Introduction 2.2 Recommendations for data packages 2.3 Sensor data", " 2 Key-Value Pair Tables 2.1 Introduction The Key-Value data model - also known as Attribute-Value or “string of pearls” data model - is widely used for certain kinds of observational data where the more conventional matrix type model would cause many empty cells. This data model treats each point observation as a single record. Typically for environmental science data, each record contains fields for location, time, variable name (or attribute name, the “key”) and value, plus various flags for methods, data quality etc. For ecologists, this data model is especially useful for (1) biodiversity and (2) sensor data that may otherwise require very wide tables in a matrix format, and/or have many empty cells e.g., when species are not regularly observed or sensors are not employed consistently. The advantages of the Attribute - Value data model are its flexibility and efficiency. However datasets in this format are not easily described in the current version of EML. The basic problem is that the values in the value field do not necessarily share the same descriptions (e.g. data type, collection methods, unit, and precision). The only way you can constrain the typing and precision with the EML attribute model is if all values in a column share these. 2.2 Recommendations for data packages 2.2.1 Biodiversity data If all of the values in a given table share the same units (e.g., presence/absence, count, percent abundance), then the table should be represented in this Attribute – Value format and described accurately in EML. If not, then the data should be represented in matrix format, or possibly several matrices if the table is unreasonably wide. The ecocomDP model developed by EDI for harmonizing ecological community survey data is a key-value style table. For more information on that model, see Recommendations for ecological community surveys. 2.3 Sensor data The Attribute - Value format is especially efficient for sensor data and variations of this data model have been developed in communities handling large volumes of sensor data (e.g., ODM or Observation Data Model from CUAHSI). For more information for using that model in EML data packages, see Recommendations for meteorology and hydrology data.html. For a single site, this data model is useful when sensors are frequently changed or redeployed or when several different sets of sensor deployments exist. To accurately describe in EML (e.g., typing, precision), it is recommended that each data table contain only the Attribute – Value formatted values for a single sensor. A single data package with data from multiple sensors, can have values for each sensor in separate entities (data tables). Most of these data models describe the concept of a single “data stream,” which may be used to achieve the here recommended approach dynamically. "],
["offline-data.html", "3 Offline Data 3.1 Introduction 3.2 Recommendations for data packages 3.3 References 3.4 Potential Issues", " 3 Offline Data 3.1 Introduction Data entities are kept offline when they are too large to be handled easily by the HTTP protocol, are expected to be rarely requested, and can be mailed on an external drive. If you suspect your data fall into this category, contact EDI for advice (support@environmentaldatainitiative.org). Below are recommendations for the EDI repository’s handling of data packages that have an offline component. 3.1.1 Authors Margaret O’Brien, Corinna Gries 3.1.2 Background Standard practice is to handle data entities (both upload and download) via the HTTP protocol, using a URL. However, for very large datasets HTTP can fail due to physical limits. The limit for “too large” is somewhat subjective; EDI’s current limit for datasets that are “too large for HTTP” is 100 gb (all data and metadata). 3.2 Recommendations for data packages 3.2.1 Physical Storage Add data to external drive in native (non-compressed, non-tarred, non-zipped) format, deliver to EDI (e.g., by physical mail). EDI will store three copies, one external hard drive each in New Mexico and in Wisconsin, one copy in general EDI backup cloud storage. 3.2.2 Data package The hard drive should contain at least two entities: the data (which will be offline) and an inventory or manifest of holdings of that entity. Content of the manifest (inventory of holdings) would be dictated by the type of data entity. The manifest will be on anline entity so that potential requestors can evaluate the offline resource before requesting it. Suggested columns are: Filename(s) Format (netCDF, tabular csv, etc.) Start_datetime End_datetime Location_lat Location_lon (other params the PIs may feel are essential) Checksum 3.2.3 Package Metadata (in EDI metadata template and converted to EML - generally, as for any data package) Abstract: describe the collection generally. If individual files require specific software to read, provide the name of that software. Creators Contact (will be responsible for sending out copies as requested.) positionName: EDI Repository Manager Email: support@environmentaldatainitiative.org Methods - detailed collection/generation methods for the offline data entities. Detailed information for re-using the data. (May instead be included in the manifest table if different for different offline files.) Data Entities Offline Entity: Describe as you would for an online resource. Restate the software needed to read the individual files if this is important to a user. See Table 1 and Sample XML. Manifest (inventory of the offline holdings) Column descriptions as for any data table 3.2.4 EML In addition to basic resource-level metadata, at least two entities should be described: Manifest (inventory) should be a tableEntity: will be the online entity and described as all Offline entity: Fill out high-level fields as for an online resource. Restate the software needed to read the individual files if this is important to a user. Distribution node will be offline (See Table 1, code block) 3.2.4.1 Table 1. Three required fields for an offline distribution physical/objectName As for any entity, this is the name of the file or data object dataFormat/ExternallyDefinedFormat/formatName The name of the format the data object is in. If there is a special compression applied, list it here. distribution/offline/mediumName Instead of a data URL, you will have an offline distribution node. The name of almost all offline media is “external drive”, because that is how you will deliver the data to a requestor. 3.2.4.2 Sample XML, offline entity &lt;physical&gt; &lt;objectName&gt;mainl_2005acc.zip&lt;/objectName&gt; &lt;dataFormat&gt; &lt;externallyDefinedFormat&gt; &lt;formatName&gt;netCDF file&lt;/formatName&gt; &lt;/externallyDefinedFormat&gt; &lt;/dataFormat&gt; &lt;distribution&gt; &lt;offline&gt; &lt;mediumName&gt;External drive&lt;/mediumName&gt; &lt;/offline&gt; &lt;/distribution&gt; &lt;/physical&gt; 3.3 References 3.3.1 EML documentation https://eml.ecoinformatics.org/schema/index.html Look for the PhysicalDistributionType 3.4 Potential Issues ssd formatting (eventually, whatever we use, it will become unusable). Even with cloud storage, eventually a binary format will become unusable "],
["photos-quadrats.html", "4 Photos - quadrats 4.1 Introduction 4.2 Recommendations for data packages", " 4 Photos - quadrats 4.1 Introduction Some background info, why this is needed. 4.1.1 Background paragraph, more specific background if needed. 4.2 Recommendations for data packages How to handle this data type "]
]
